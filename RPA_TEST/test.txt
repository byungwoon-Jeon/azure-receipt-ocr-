import os
import logging
from PyPDF2 import PdfReader, PdfWriter

# 로깅 설정
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")

def split_pdf_by_pages(input_pdf: str, output_dir: str) -> None:
    """
    PDF 파일을 페이지 단위로 분할하여 각각 저장합니다.

    Args:
        input_pdf (str): 분할할 대상 PDF 파일 경로
        output_dir (str): 분할된 PDF를 저장할 폴더 경로
    """
    try:
        if not os.path.exists(input_pdf):
            raise FileNotFoundError(f"PDF 파일이 존재하지 않습니다: {input_pdf}")
        
        os.makedirs(output_dir, exist_ok=True)
        reader = PdfReader(input_pdf)

        logging.info(f"총 {len(reader.pages)} 페이지 발견")

        for page_num, page in enumerate(reader.pages, start=1):
            writer = PdfWriter()
            writer.add_page(page)

            output_file = os.path.join(output_dir, f"page_{page_num}.pdf")
            with open(output_file, "wb") as f:
                writer.write(f)

            logging.info(f"{page_num} 페이지 저장 완료 -> {output_file}")

        logging.info("PDF 분할 완료")

    except Exception as e:
        logging.error(f"PDF 분할 중 오류 발생: {e}", exc_info=True)


if __name__ == "__main__":
    input_pdf_path = "example.pdf"      # 분할할 PDF 경로
    output_directory = "output_pages"   # 결과 저장 폴더
    split_pdf_by_pages(input_pdf_path, output_directory)


너는 OCR을 수행해서 문서의 표 데이터를 JSON으로 구조화하는 역할을 한다.  
아래에 첨부한 대기시험성적서 이미지에서 다음 두 개의 테이블을 추출하라:

1. **시료채취 부분**  
- 필드: 시료채취일, 시료채취자, 측정분석자, 측정시간, 측정분석방법(기기명), 비고

2. **측정·분석 결과 부분**  
- 항목(먼지, THC 등), 허용기준, 측정결과, 측정단위

출력은 반드시 JSON 형식으로 한다.  
각 표는 별도의 key를 두어 구조화하라.  

예시 출력 형식:
{
  "시료채취": {
    "시료채취일": "2021.5.6.",
    "시료채취자": " ",
    "측정분석자": " ",
    "측정시간": " ",
    "측정분석방법": " ",
    "비고": " "
  },
  "측정분석결과": [
    {
      "항목": "먼지",
      "허용기준": "30 (mg/Sm³)",
      "측정결과": "10.3",
      "단위": "mg/Sm³"
    },
    {
      "항목": "THC로서",
      "허용기준": "110 (ppm)",
      "측정결과": "20.8",
      "단위": "ppm"
    }
  ]
}


