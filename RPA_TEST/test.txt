# pre_pre_process.py
from PIL import Image, ImageFile, UnidentifiedImageError
from PIL.Image import DecompressionBombError
import time

ImageFile.LOAD_TRUNCATED_IMAGES = True  # 손상 이미지도 로드 시도

def convert_to_png(input_path: str, save_dir: str) -> str:
    logger.info("[시작] convert_to_png")

    # (네가 이미 넣은) DL-CHECK 바로 위/아래에 위치시키면 됨
    import os
    os.makedirs(save_dir, exist_ok=True)
    filename = os.path.splitext(os.path.basename(input_path))[0] + ".png"
    save_path = os.path.join(save_dir, filename)

    # Pillow 코덱 지원 상태도 한 번 찍어두기(참고용)
    try:
        from PIL import features
        logger.info(f"[PIL] jpg={features.check('jpg')} png={features.check('png')} webp={features.check('webp')}")
    except Exception:
        pass

    t0 = time.time()
    try:
        logger.info(f"[OPEN] Image.open 시도: {input_path}")
        with Image.open(input_path) as img:
            logger.info(f"[OPEN-OK] format={img.format}, mode={img.mode}, size={img.size}")
            img.load()  # 디코더 강제 로드(지연평가 제거)
            logger.info("[LOAD-OK] 디코딩 완료")
            out = img.convert("RGB")
            out.save(save_path, "PNG", optimize=True)
            logger.info(f"[SAVE-OK] → {save_path} (elapsed={time.time()-t0:.2f}s)")
    except UnidentifiedImageError as e:
        logger.error(f"[OPEN-ERR] 포맷 인식 실패(UnidentifiedImageError): {e}", exc_info=True)
        raise
    except DecompressionBombError as e:
        logger.error(f"[OPEN-ERR] 초대형 이미지 차단(DecompressionBombError): {e}", exc_info=True)
        raise
    except OSError as e:
        logger.error(f"[OPEN-ERR] OSError: {e}", exc_info=True)
        raise
    except Exception as e:
        logger.error(f"[OPEN-ERR] 기타 예외: {e}", exc_info=True)
        raise

    logger.info("[종료] convert_to_png")
    return save_path